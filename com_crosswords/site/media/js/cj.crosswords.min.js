var CrosswordsFactory = {};

(function ($) {
  CrosswordsFactory.init_details = function () {

    $('#crossword-grid').find('input').keyup(function (event) {
      switch (event.which) {
        case 38: //up
          CrosswordsFactory.move_cursor($(this), 1)
          break
        case 39: //right
          CrosswordsFactory.move_cursor($(this), 2)
          break
        case 40: //down
          CrosswordsFactory.move_cursor($(this), 3)
          break
        case 37: //left
          CrosswordsFactory.move_cursor($(this), 4)
          break
      }
    })

    $('#crossword-grid').find('input').keypress(function (event) {
      if ($(this).prop('readonly') == false) {
        switch (event.which) {
          case 13: //return
            event.preventDefault()
            $(this).click()
            break
          default:
            if ($('#enable_auto_move').text() == '1') {
              var c = String.fromCharCode(event.which).toUpperCase()
              if (((c >= 'A' && c <= 'Z') || c == ' ' || (c >= 0 && c <= 9)) || c.match(/\p{L}\p{M}*/g)) {
                $(this).val(c)
                CrosswordsFactory.move_cursor($(this), 6)
                event.preventDefault()
              }
            }
            break
        }
      }
    }).keydown(function (event) {
      if ($(this).prop('readonly') == false && event.which == 8) { //backspace
        $(this).val('')
        if ($('#enable_auto_move').text() == '1') {
          CrosswordsFactory.move_cursor($(this), 5)
        }
      }
    })

    $('#crossword-grid').find('input').click(function () {
      var input = $(this)
      var clazs = input.attr('class').split(' ')
      var axis = 'x'
      var pos = 0
      $.each(clazs, function (index, claz) {
        if (claz.indexOf('axis-') == 0) {
          if (input.hasClass('cross-cell')) {
            if (claz.indexOf('axis-x') == 0) {
              pos = claz.split('-')[3]
            }
          } else {
            var idz = claz.split('-')
            axis = idz[1]
            pos = idz[3]
          }
        }
      })
      $('#crossword-grid').find('.textcellh').removeClass('textcellh')
      $('.axis-' + axis + '-pos-' + pos).parents('.textcell').addClass('textcellh').removeClass('highlight')
      $('.questions').find('tr').removeClass('success')
      $('#' + axis + '-' + pos).addClass('success')
      $('.question-highlight-box').html($('#' + axis + '-' + pos).find('td:last').html())
    })

    $('.question-title').click(function () {
      $('#crossword-grid').find('.textcellh').removeClass('textcellh')
      var axis = $(this).attr('id').split('-')[0]
      var pos = $(this).attr('id').split('-')[1]
      $('.axis-' + axis + '-pos-' + pos).parents('.textcell').addClass('textcellh')
      $(this).closest('.questions').find('tr').removeClass('success')
      $(this).closest('tr').addClass('success')
      $('.question-highlight-box').html($(this).find('td:last').html())
    })

    $('#btn-check-result').click(function () {
      var form = $('#crossword-form')
      var button = $(this)
      var url = $('#url_check_result').text()

      $.ajax({
        type: 'POST',
        url: url + (/\?/.test(url) ? '&' : '?') + 'format=json',
        data: form.serialize(),
        dataType: 'json',
        encode: true,
        beforeSend: function (xhr) {
          button.attr('disabled', true)
        },
      }).done(function (xhr) {
        var data = xhr
        if (data.messages && data.messages.message) {
          if (typeof data.messages.message != 'undefined') {
            alert(data.messages.message)
          }
        }
        if (data.success) {
          var result = data.data
          if (result.status === 1) {
            $('#crossword-grid').find('input').prop('disabled', true)
            $('#message-modal').modal('show').find('.modal-body').html(result.message)
            $('.navigation').remove()
          } else if (result.status === 2) {
            $('#crossword-grid').find('.textcell').removeClass('textcellh')
            $('#crossword-grid').find('.textcell').removeClass('highlight')
            for (var i = 0; i < result.failed.length; i++) {
              $('.' + result.failed[i]).parents('.textcell').addClass('highlight')
            }
            $('#message-modal').modal('show').find('.modal-body').html($('#msg_failed_answers').html())
          }
        } else {
          alert(data.message)
        }
        button.attr('disabled', false)
      }).fail(function (data) {
        if (typeof data.responseJSON.message != 'undefined') {
          alert(data.responseJSON.message)
        }
        button.attr('disabled', false)
      })
    })

    $('#btn-solve-question').click(function () {
      if ($('#crossword-form').find('.textcellh').length > 0) {
        var axis = 'x'
        var pos = 0
        var row = 0
        var col = 0
        $('#crossword-form').find('.textcellh').each(function (index, element) {
          var claz = $(this).find('input').attr('class')
          if (claz.indexOf('axis-x') >= 0 && claz.indexOf('axis-y') >= 0) {
            //not fit for selecting values, cross cell.
          } else if (claz.indexOf('axis-x') == 0) {
            var params = claz.split('-')
            axis = 'x'
            pos = params[3]
            return false //break now
          } else if (claz.indexOf('axis-y') == 0) {
            var params = claz.split('-')
            axis = 'y'
            pos = params[3]
          }
        })

        if (axis == 'x') {
          if ($('.start-pos-across-' + pos).length > 0) {
            var idz = $('.start-pos-across-' + pos).find('input').attr('id').split('-')
            row = parseInt(idz[1])
            col = parseInt(idz[3])
          }
        } else {
          if ($('.start-pos-down-' + pos).length > 0) {
            var idz = $('.start-pos-down-' + pos).find('input').attr('id').split('-')
            row = parseInt(idz[1])
            col = parseInt(idz[3])
          }
        }

        var button = $(this)
        var url = $('#url_solve_question').text()

        $.ajax({
          type: 'POST',
          url: url + (/\?/.test(url) ? '&' : '?') + 'format=json',
          data: { 'pos': pos, 'axis': axis },
          dataType: 'json',
          encode: true,
          beforeSend: function (xhr) {
            button.attr('disabled', true)
          },
        }).done(function (xhr) {
          var data = xhr
          if (data.messages && data.messages.message) {
            if (typeof data.messages.message != 'undefined') {
              alert(data.messages.message)
            }
          }
          if (data.success) {
            if (axis == 'x') { //rows
              for (var i = 0; i < data.data.length; i++) {
                $('#x-' + row + '-y-' + (col + i)).val(data.data[i])
              }
            } else { // columns
              for (var i = 0; i < data.data.length; i++) {
                $('#x-' + (row + i) + '-y-' + col).val(data.data[i])
              }
            }
          } else {
            alert(data.message)
          }
          button.attr('disabled', false)
        }).fail(function (data) {
          if (typeof data.responseJSON.message != 'undefined') {
            alert(data.responseJSON.message)
          }
          button.attr('disabled', false)
        })
      } else {
        $('#message-modal').modal('show').find('.modal-body').html($('#msg_select_question').html())
      }
    })

    $('#btn-solve-crossword').click(function () {
      $('#confirm-modal').modal('show')
      $('.btn-confirm-solve-crossword').attr('disabled', false)
    })

    $('.btn-confirm-solve-crossword').click(function () {
      var form = $('#crossword-form')
      var button = $(this)
      var url = $('#url_solve_crossword').text()

      $.ajax({
        type: 'GET',
        url: url + (/\?/.test(url) ? '&' : '?') + 'format=json',
        data: [],
        dataType: 'json',
        encode: true,
        beforeSend: function (xhr) {
          button.attr('disabled', true)
        },
      }).done(function (xhr) {
        var data = xhr
        if (data.messages && data.messages.message) {
          if (typeof data.messages.message != 'undefined') {
            alert(data.messages.message)
          }
        }
        if (data.success) {
          if (data.data != null && data.data.length > 0) {
            for (var i = 0; i < data.data.length; i++) {
              $('#' + data.data[i].id).val(data.data[i].value)
            }
            $('#crossword-grid').find('input').attr('readonly', true)
          }
          $('.navigation').remove()
        } else {
          alert(data.message)
        }
        button.attr('disabled', false)
      }).fail(function (data) {
        if (typeof data.responseJSON.message != 'undefined') {
          alert(data.responseJSON.message)
        }
        button.attr('disabled', false)
      })
    })
  }

  CrosswordsFactory.init_form = function () {
    $('.btn-save-crossword').click(function () {
      $('.crossword-form').find('.target-list').find('option').attr('selected', true)
    })

    $('#toggle-advanced-setup').click(function () {
      $('#fieldset-advanced-setup').slideToggle()
      $(this).hide()
    })

    var container = $('.multiselect-container')
    container.find('.btn-move-right').click(function () {container.find('.source-list').find('option:selected').appendTo(container.find('.target-list'))})
    container.find('.btn-move-left').click(function () {container.find('.target-list').find('option:selected').appendTo(container.find('.source-list'))})
    container.find('.btn-all-right').click(function () {container.find('.source-list').find('option').appendTo(container.find('.target-list'))})
    container.find('.btn-all-left').click(function () {container.find('.target-list').find('option').appendTo(container.find('.source-list'))})
    container.find('.btn-select-all').click(function () {
      var index = $(this).parent().index()
      container.find('tr:first').find('td').eq(index).find('option').attr('selected', true)
    })
    container.find('.btn-deselect-all').click(function () {
      var index = $(this).parent().index()
      container.find('tr:first').find('td').eq(index).find('option').attr('selected', false)
    })

    $('#cj-wrapper').find('select[name="catid"]').change(function () {
      var catid = $(this).val()
      $('#progress-confirm').show().insertAfter($(this))

      if (catid != null && catid != '') {
        $('#cj-wrapper').find('.multiselect-container').find('option').remove()
        $.ajax({
          url: $('#url_get_questions').html(),
          data: { 'catid': catid },
          dataType: 'json',
          beforeSend: function () {
            var id = 0
            try {id = $('.crossword-form').find('input[name="id"]').val()}
            catch (e) {}
            if (id > 0) {
              $('#progress-confirm').hide()
              return false
            }
          },
          success: function (data) {
            if (data != null && typeof data.error != 'undefined') {
              $('#message-modal').modal('show').find('.modal-body').html(data.error)
            } else {
              for (var i = 0; i < data.questions.length; i++) {
                container.find('.source-list').append(
                  $('<option>', { 'value': data.questions[i].id, 'title': data.questions[i].question }).text(data.questions[i].question),
                )
              }
            }
            $('#progress-confirm').hide()
          },
        })
      } else {
        container.find('.source-list, .target-list').empty()
      }
    })
  }

  CrosswordsFactory.move_cursor = function (current, direction) {
    var x = parseInt(current.attr('id').split('-')[1])
    var y = parseInt(current.attr('id').split('-')[3])
    switch (direction) {
      case 1: //up
        if ($('#x-' + (x - 1) + '-y-' + y).length > 0) {
          $('#x-' + (x - 1) + '-y-' + y).focus()
        }
        break
      case 2: //right
        if ($('#x-' + x + '-y-' + (y + 1)).length > 0) {
          $('#x-' + x + '-y-' + (y + 1)).focus()
        }
        break
      case 3: //down
        if ($('#x-' + (x + 1) + '-y-' + y).length > 0) {
          $('#x-' + (x + 1) + '-y-' + y).focus()
        }
        break
      case 4: //left
        if ($('#x-' + x + '-y-' + (y - 1)).length > 0) {
          $('#x-' + x + '-y-' + (y - 1)).focus()
        }
        break
      case 5: //auto back
        if ($('#x-' + x + '-y-' + (y - 1)).parents('.textcell').hasClass('textcellh')) {
          $('#x-' + x + '-y-' + (y - 1)).focus()
        } else if ($('#x-' + (x - 1) + '-y-' + y).parents('.textcell').hasClass('textcellh')) {
          $('#x-' + (x - 1) + '-y-' + y).focus()
        }
        break
      case 6: //auto advance
        if ($('#x-' + x + '-y-' + (y + 1)).parents('.textcell').hasClass('textcellh')) {
          $('#x-' + x + '-y-' + (y + 1)).focus()
        } else if ($('#x-' + (x + 1) + '-y-' + y).parents('.textcell').hasClass('textcellh')) {
          $('#x-' + (x + 1) + '-y-' + y).focus()
        }
        break
    }
  }
})(jQuery)

jQuery(document).ready(function ($) {

  $('body').on('mouseover', '.tooltip-hover', function () {$(this).tooltip('show')})
  $(document.body).append($('<div>', { 'id': 'cj-wrapper' }).append($('.cj-wrapper-main').find('.modal')))

  $('#keyword_form').on('hidden', function () {
    $('#submit-keyword-error, #submit-keyword-message').hide()
    $('#save-keyword, #save-keyword-close').button('reset')
  })

  $('#save-keyword, #save-keyword-close').click(function () {
    var form = $('#form-submit-keyword')
    var button = $(this)
    var url = form.attr('action')

    $.ajax({
      type: 'POST',
      url: url + (/\?/.test(url) ? '&' : '?') + 'format=json',
      data: form.serialize(),
      dataType: 'json',
      encode: true,
      beforeSend: function (xhr) {
        $('#submit-keyword-error, #submit-keyword-message').hide()
        button.attr('disabled', true)
      },
    }).done(function (xhr) {
      var data = xhr
      if (data.messages && data.messages.message) {
        if (typeof data.messages.message != 'undefined') {
          alert(data.messages.message)
        }
      }
      if (data.success) {
        $('#form-submit-keyword').find('input').val('')
        if (button.attr('id') == 'save-keyword-close') {
          $('#keyword_form').modal('hide')
        } else {
          $('#submit-keyword-message').html(data.message).show()
        }
      } else {
        alert(data.message)
      }
      button.attr('disabled', false)
    }).fail(function (data) {
      if (typeof data.responseJSON.message != 'undefined') {
        alert(data.responseJSON.message)
      }
      button.attr('disabled', false)
    })
  })

  switch ($('#cjpageid').val()) {
    case 'crossword_deails':
      CrosswordsFactory.init_details()
      break

    case 'crossword_form':
      CrosswordsFactory.init_form()
      break
  }
})